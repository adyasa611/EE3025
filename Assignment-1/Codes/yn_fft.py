# -*- coding: utf-8 -*-
"""IDP.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SKpTp1UvYa6B4veG5iWHOXKA8NeeLxI7
"""

import numpy as np
import soundfile as sf
from scipy import signal
import matplotlib.pyplot as plt
#If using termux
import subprocess
import shlex
#end if

input_signal,fs = sf.read('Sound_Noise.wav')
sample_frequency = fs
order = 4
cutoff_freq = 4000.0
Wn = 2*cutoff_frequency/sample_frequency

b,a = signal.butter(order,Wn,'low')

x = input_signal
y = np.zeros(len(x))

w = np.linspace(-np.pi,np.pi,len(x),endpoint=True)
z = np.exp(1j*w)
H = np.polyval(b,pow(z,-1))/np.polyval(a,pow(z,-1))
X = np.fft.fftshift(np.fft.fft(x))
y = np.fft.ifft(np.fft.ifftshift(np.multiply(X,H)))
sf.write('Sound_fft.wav',np.real(y),fs)

plt.plot(np.real(y))
plt.title('Output signal through IFFT')
plt.xlabel('$n$')
plt.ylabel('$y(n)$')
plt.grid()# minor

#If using termux
plt.savefig('../Figures/yn_fft.pdf')
plt.savefig('../Figures/yn_fft.eps')
subprocess.run(shlex.split("termux-open ../Figures/yn_fft.pdf"))
#else
#plt.show()

from google.colab import drive
drive.mount('/content/drive')